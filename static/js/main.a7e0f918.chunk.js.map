{"version":3,"sources":["components/Header.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","src","Meme","_React$useState","React","useState","topText","bottomText","randomImage","_React$useState2","Object","slicedToArray","meme","setMeme","_React$useState3","_React$useState4","allMemes","setAllMemes","handleChange","event","_event$target","target","name","value","prevMeme","objectSpread","defineProperty","useEffect","fetch","then","res","json","data","memes","type","placeholder","onChange","onClick","randomNumber","Math","floor","random","length","url","alt","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIAEe,SAASA,IACpB,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OACIE,IAAI,0BACJD,UAAU,kBAEdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,kBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,sDCRG,SAASE,IAAO,IAAAC,EAEHC,IAAMC,SAAS,CACnCC,QAAS,GACTC,WAAY,GACZC,YAAa,kCALUC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAEpBS,EAFoBH,EAAA,GAEdI,EAFcJ,EAAA,GAAAK,EAOKV,IAAMC,SAAS,IAPpBU,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOpBE,EAPoBD,EAAA,GAOVE,EAPUF,EAAA,GAwB3B,SAASG,EAAaC,GAAM,IAAAC,EACHD,EAAME,OAApBC,EADiBF,EACjBE,KAAKC,EADYH,EACZG,MACZV,EAAQ,SAAAW,GACJ,OAAAd,OAAAe,EAAA,EAAAf,CAAA,GACOc,EADPd,OAAAgB,EAAA,EAAAhB,CAAA,GAEKY,EAAMC,MAKnB,OAzBAnB,IAAMuB,UAAU,WACZC,MAAM,qCACDC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIf,EAAYe,EAAKA,KAAKC,UACzC,IAsBCpC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SACImC,KAAK,OACLC,YAAY,WACZnC,UAAU,cACVsB,KAAK,UACLC,MAAOX,EAAKN,QACZ8B,SAAUlB,IAEdrB,EAAAC,EAAAC,cAAA,SACImC,KAAK,OACLC,YAAY,cACZnC,UAAU,cACVsB,KAAK,aACLC,MAAOX,EAAKL,WACZ6B,SAAUlB,IAEdrB,EAAAC,EAAAC,cAAA,UACIC,UAAU,eACVqC,QAxChB,WACI,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWzB,EAAS0B,QACnDC,EAAM3B,EAASsB,GAAcK,IACnC9B,EAAQ,SAAAW,GAAQ,OAAAd,OAAAe,EAAA,EAAAf,CAAA,GACTc,EADS,CAEZhB,YAAamC,QAiCT,sCAOJ9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKW,EAAKJ,YAAaR,UAAU,cAAc4C,IAAI,aACxD/C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBY,EAAKN,SACrCT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAqBY,EAAKL,cC9DzC,SAASsC,IACtB,OACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACG,EAAD,OCPN,IAYe4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAArB,KAAAoB,EAAAE,KAAA,UAAqBtB,KAAK,SAAAuB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCFdW,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8C,EAAD,OAEFgB,SAASC,eAAe,SAE1BhB","file":"static/js/main.a7e0f918.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function Header() {\n    return (\n        <header className=\"header\">\n            <img \n                src=\"./images/troll-face.png\" \n                className=\"header--image\"\n            />\n            <h2 className=\"header--title\">Meme Generator</h2>\n            <h4 className=\"header--project\">React Course - Project 3</h4>\n        </header>\n    )\n}","import React from \"react\"\n\nexport default function Meme() {\n    \n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n    React.useEffect(() => {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(res => res.json())\n            .then(data => setAllMemes(data.data.memes))\n    }, [])\n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    function handleChange(event){\n        const {name,value} = event.target\n        setMeme(prevMeme =>{\n            return{\n                ...prevMeme,\n                [name]:value\n            }\n        })\n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" alt=\"meme-img\"/>\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Form from \"./components/Form\"\nexport default function App() {\n  return (\n    <div>\n      <Header/>\n      <Form/>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}